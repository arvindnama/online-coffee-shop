// Code generated by go-swagger; DO NOT EDIT.

package orders

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/arvindnama/golang-microservices/order-service/sdk/models"
)

// PatchOrderReader is a Reader for the PatchOrder structure.
type PatchOrderReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PatchOrderReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewPatchOrderCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewPatchOrderUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPatchOrderInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PATCH /orders/{id}] patchOrder", response, response.Code())
	}
}

// NewPatchOrderCreated creates a PatchOrderCreated with default headers values
func NewPatchOrderCreated() *PatchOrderCreated {
	return &PatchOrderCreated{}
}

/*
PatchOrderCreated describes a response with status code 201, with default header values.

A orders
*/
type PatchOrderCreated struct {
	Payload *models.Order
}

// IsSuccess returns true when this patch order created response has a 2xx status code
func (o *PatchOrderCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this patch order created response has a 3xx status code
func (o *PatchOrderCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this patch order created response has a 4xx status code
func (o *PatchOrderCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this patch order created response has a 5xx status code
func (o *PatchOrderCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this patch order created response a status code equal to that given
func (o *PatchOrderCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the patch order created response
func (o *PatchOrderCreated) Code() int {
	return 201
}

func (o *PatchOrderCreated) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PATCH /orders/{id}][%d] patchOrderCreated %s", 201, payload)
}

func (o *PatchOrderCreated) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PATCH /orders/{id}][%d] patchOrderCreated %s", 201, payload)
}

func (o *PatchOrderCreated) GetPayload() *models.Order {
	return o.Payload
}

func (o *PatchOrderCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Order)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchOrderUnauthorized creates a PatchOrderUnauthorized with default headers values
func NewPatchOrderUnauthorized() *PatchOrderUnauthorized {
	return &PatchOrderUnauthorized{}
}

/*
PatchOrderUnauthorized describes a response with status code 401, with default header values.

PatchOrderUnauthorized patch order unauthorized
*/
type PatchOrderUnauthorized struct {
	Payload *models.ValidationError
}

// IsSuccess returns true when this patch order unauthorized response has a 2xx status code
func (o *PatchOrderUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this patch order unauthorized response has a 3xx status code
func (o *PatchOrderUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this patch order unauthorized response has a 4xx status code
func (o *PatchOrderUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this patch order unauthorized response has a 5xx status code
func (o *PatchOrderUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this patch order unauthorized response a status code equal to that given
func (o *PatchOrderUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the patch order unauthorized response
func (o *PatchOrderUnauthorized) Code() int {
	return 401
}

func (o *PatchOrderUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PATCH /orders/{id}][%d] patchOrderUnauthorized %s", 401, payload)
}

func (o *PatchOrderUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PATCH /orders/{id}][%d] patchOrderUnauthorized %s", 401, payload)
}

func (o *PatchOrderUnauthorized) GetPayload() *models.ValidationError {
	return o.Payload
}

func (o *PatchOrderUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ValidationError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchOrderInternalServerError creates a PatchOrderInternalServerError with default headers values
func NewPatchOrderInternalServerError() *PatchOrderInternalServerError {
	return &PatchOrderInternalServerError{}
}

/*
PatchOrderInternalServerError describes a response with status code 500, with default header values.

PatchOrderInternalServerError patch order internal server error
*/
type PatchOrderInternalServerError struct {
	Payload *models.ValidationError
}

// IsSuccess returns true when this patch order internal server error response has a 2xx status code
func (o *PatchOrderInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this patch order internal server error response has a 3xx status code
func (o *PatchOrderInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this patch order internal server error response has a 4xx status code
func (o *PatchOrderInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this patch order internal server error response has a 5xx status code
func (o *PatchOrderInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this patch order internal server error response a status code equal to that given
func (o *PatchOrderInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the patch order internal server error response
func (o *PatchOrderInternalServerError) Code() int {
	return 500
}

func (o *PatchOrderInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PATCH /orders/{id}][%d] patchOrderInternalServerError %s", 500, payload)
}

func (o *PatchOrderInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PATCH /orders/{id}][%d] patchOrderInternalServerError %s", 500, payload)
}

func (o *PatchOrderInternalServerError) GetPayload() *models.ValidationError {
	return o.Payload
}

func (o *PatchOrderInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ValidationError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
