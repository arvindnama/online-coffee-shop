//[learning]: proto file defines the service & message structure
// This becomes an input to poto compile for generating server side interfaces & client side stubs
// first line specified the compiler version.
syntax = "proto3";

option go_package="protos/currency";

//[learning]: service: is the contract that client / server use to communicate.
service Currency {
    //[learning]: method : syntax: rpc <name_of_method>(<request_message>)r returns (<response_message>) { }

    rpc GetRate(RateRequest) returns (RateResponse);
}

//[learning]: message: is the structure data that flows inside protocol buffer
message RateRequest {
    //[learning]: Field inside a message : <type> <nameOfField> = <location_in_msg>
    Currencies Base = 1;
    Currencies Destination = 2;
}

message RateResponse {
    float Rate = 1;
}


enum Currencies {
  EUR=0;
  USD=1;
  JPY=2;
  BGN=3;
  CZK=4;
  DKK=5;
  GBP=6;
  HUF=7;
  PLN=8;
  RON=9;
  SEK=10;
  CHF=11;
  ISK=12;
  NOK=13;
  HRK=14;
  RUB=15;
  TRY=16;
  AUD=17;
  BRL=18;
  CAD=19;
  CNY=20;
  HKD=21;
  IDR=22;
  ILS=23;
  INR=24;
  KRW=25;
  MXN=26;
  MYR=27;
  NZD=28;
  PHP=29;
  SGD=30;
  THB=31;
  ZAR=32;
}