// Code generated by go-swagger; DO NOT EDIT.

package products

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/arvindnama/golang-microservices/product-api-service/sdk/models"
)

// ListProductReader is a Reader for the ListProduct structure.
type ListProductReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListProductReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewListProductOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewListProductNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 501:
		result := NewListProductNotImplemented()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /products/{id}] listProduct", response, response.Code())
	}
}

// NewListProductOK creates a ListProductOK with default headers values
func NewListProductOK() *ListProductOK {
	return &ListProductOK{}
}

/*
ListProductOK describes a response with status code 200, with default header values.

Product
*/
type ListProductOK struct {
	Payload *models.Product
}

// IsSuccess returns true when this list product o k response has a 2xx status code
func (o *ListProductOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this list product o k response has a 3xx status code
func (o *ListProductOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list product o k response has a 4xx status code
func (o *ListProductOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this list product o k response has a 5xx status code
func (o *ListProductOK) IsServerError() bool {
	return false
}

// IsCode returns true when this list product o k response a status code equal to that given
func (o *ListProductOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the list product o k response
func (o *ListProductOK) Code() int {
	return 200
}

func (o *ListProductOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /products/{id}][%d] listProductOK %s", 200, payload)
}

func (o *ListProductOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /products/{id}][%d] listProductOK %s", 200, payload)
}

func (o *ListProductOK) GetPayload() *models.Product {
	return o.Payload
}

func (o *ListProductOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Product)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListProductNotFound creates a ListProductNotFound with default headers values
func NewListProductNotFound() *ListProductNotFound {
	return &ListProductNotFound{}
}

/*
ListProductNotFound describes a response with status code 404, with default header values.

Generic Error message as string
*/
type ListProductNotFound struct {
	Payload *models.GenericError
}

// IsSuccess returns true when this list product not found response has a 2xx status code
func (o *ListProductNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list product not found response has a 3xx status code
func (o *ListProductNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list product not found response has a 4xx status code
func (o *ListProductNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this list product not found response has a 5xx status code
func (o *ListProductNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this list product not found response a status code equal to that given
func (o *ListProductNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the list product not found response
func (o *ListProductNotFound) Code() int {
	return 404
}

func (o *ListProductNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /products/{id}][%d] listProductNotFound %s", 404, payload)
}

func (o *ListProductNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /products/{id}][%d] listProductNotFound %s", 404, payload)
}

func (o *ListProductNotFound) GetPayload() *models.GenericError {
	return o.Payload
}

func (o *ListProductNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GenericError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListProductNotImplemented creates a ListProductNotImplemented with default headers values
func NewListProductNotImplemented() *ListProductNotImplemented {
	return &ListProductNotImplemented{}
}

/*
ListProductNotImplemented describes a response with status code 501, with default header values.

Generic Error message as string
*/
type ListProductNotImplemented struct {
	Payload *models.GenericError
}

// IsSuccess returns true when this list product not implemented response has a 2xx status code
func (o *ListProductNotImplemented) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list product not implemented response has a 3xx status code
func (o *ListProductNotImplemented) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list product not implemented response has a 4xx status code
func (o *ListProductNotImplemented) IsClientError() bool {
	return false
}

// IsServerError returns true when this list product not implemented response has a 5xx status code
func (o *ListProductNotImplemented) IsServerError() bool {
	return true
}

// IsCode returns true when this list product not implemented response a status code equal to that given
func (o *ListProductNotImplemented) IsCode(code int) bool {
	return code == 501
}

// Code gets the status code for the list product not implemented response
func (o *ListProductNotImplemented) Code() int {
	return 501
}

func (o *ListProductNotImplemented) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /products/{id}][%d] listProductNotImplemented %s", 501, payload)
}

func (o *ListProductNotImplemented) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /products/{id}][%d] listProductNotImplemented %s", 501, payload)
}

func (o *ListProductNotImplemented) GetPayload() *models.GenericError {
	return o.Payload
}

func (o *ListProductNotImplemented) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GenericError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
