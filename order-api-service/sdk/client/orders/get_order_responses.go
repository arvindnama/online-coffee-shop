// Code generated by go-swagger; DO NOT EDIT.

package orders

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/arvindnama/golang-microservices/order-service/sdk/models"
)

// GetOrderReader is a Reader for the GetOrder structure.
type GetOrderReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetOrderReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetOrderOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetOrderUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetOrderInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /orders/{id}] getOrder", response, response.Code())
	}
}

// NewGetOrderOK creates a GetOrderOK with default headers values
func NewGetOrderOK() *GetOrderOK {
	return &GetOrderOK{}
}

/*
GetOrderOK describes a response with status code 200, with default header values.

A orders
*/
type GetOrderOK struct {
	Payload *models.Order
}

// IsSuccess returns true when this get order o k response has a 2xx status code
func (o *GetOrderOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get order o k response has a 3xx status code
func (o *GetOrderOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get order o k response has a 4xx status code
func (o *GetOrderOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get order o k response has a 5xx status code
func (o *GetOrderOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get order o k response a status code equal to that given
func (o *GetOrderOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get order o k response
func (o *GetOrderOK) Code() int {
	return 200
}

func (o *GetOrderOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /orders/{id}][%d] getOrderOK %s", 200, payload)
}

func (o *GetOrderOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /orders/{id}][%d] getOrderOK %s", 200, payload)
}

func (o *GetOrderOK) GetPayload() *models.Order {
	return o.Payload
}

func (o *GetOrderOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Order)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOrderUnauthorized creates a GetOrderUnauthorized with default headers values
func NewGetOrderUnauthorized() *GetOrderUnauthorized {
	return &GetOrderUnauthorized{}
}

/*
GetOrderUnauthorized describes a response with status code 401, with default header values.

GetOrderUnauthorized get order unauthorized
*/
type GetOrderUnauthorized struct {
	Payload *models.ValidationError
}

// IsSuccess returns true when this get order unauthorized response has a 2xx status code
func (o *GetOrderUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get order unauthorized response has a 3xx status code
func (o *GetOrderUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get order unauthorized response has a 4xx status code
func (o *GetOrderUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get order unauthorized response has a 5xx status code
func (o *GetOrderUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get order unauthorized response a status code equal to that given
func (o *GetOrderUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get order unauthorized response
func (o *GetOrderUnauthorized) Code() int {
	return 401
}

func (o *GetOrderUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /orders/{id}][%d] getOrderUnauthorized %s", 401, payload)
}

func (o *GetOrderUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /orders/{id}][%d] getOrderUnauthorized %s", 401, payload)
}

func (o *GetOrderUnauthorized) GetPayload() *models.ValidationError {
	return o.Payload
}

func (o *GetOrderUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ValidationError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOrderInternalServerError creates a GetOrderInternalServerError with default headers values
func NewGetOrderInternalServerError() *GetOrderInternalServerError {
	return &GetOrderInternalServerError{}
}

/*
GetOrderInternalServerError describes a response with status code 500, with default header values.

GetOrderInternalServerError get order internal server error
*/
type GetOrderInternalServerError struct {
	Payload *models.ValidationError
}

// IsSuccess returns true when this get order internal server error response has a 2xx status code
func (o *GetOrderInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get order internal server error response has a 3xx status code
func (o *GetOrderInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get order internal server error response has a 4xx status code
func (o *GetOrderInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get order internal server error response has a 5xx status code
func (o *GetOrderInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get order internal server error response a status code equal to that given
func (o *GetOrderInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get order internal server error response
func (o *GetOrderInternalServerError) Code() int {
	return 500
}

func (o *GetOrderInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /orders/{id}][%d] getOrderInternalServerError %s", 500, payload)
}

func (o *GetOrderInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /orders/{id}][%d] getOrderInternalServerError %s", 500, payload)
}

func (o *GetOrderInternalServerError) GetPayload() *models.ValidationError {
	return o.Payload
}

func (o *GetOrderInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ValidationError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
